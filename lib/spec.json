{
    "openapi": "3.0.0",
    "info": {
        "description": "The user service implements all user functions for GroupAlarm.\n\n# Authentication\n\n<!-- ReDoc-Inject: <security-definitions> -->",
        "title": "groupalarm User API",
        "version": "1.16.1",
        "x-logo": {
            "url": "https://www.groupalarm.com/favicon/logo_512.png"
        }
    },
    "paths": {
        "/auth/login": {
            "post": {
                "security": [],
                "description": "Handles the user login and returns a user payload with JWT token",
                "tags": [
                    "auth"
                ],
                "operationId": "Login",
                "responses": {
                    "200": {
                        "description": "user payload with token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "User is a basic copy of user-service's PublicUser",
                                    "type": "object",
                                    "properties": {
                                        "email": {
                                            "description": "users email address",
                                            "type": "string",
                                            "x-go-name": "EMail"
                                        },
                                        "id": {
                                            "description": "ID for this user",
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "ID"
                                        },
                                        "name": {
                                            "description": "name of the user",
                                            "type": "string",
                                            "x-go-name": "Name"
                                        },
                                        "surname": {
                                            "description": "surname of the user",
                                            "type": "string",
                                            "x-go-name": "Surname"
                                        }
                                    },
                                    "x-go-package": "groupalarm.com/go/audit/api/services"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "email or password incorrect / invalid or missing mfa code / user invitation pending"
                    },
                    "500": {
                        "description": "error generating token"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "description": "The email for this account",
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "The password for this account",
                                        "type": "string"
                                    },
                                    "mfa": {
                                        "description": "The user's current mfa code. This code is required if the user enabled mfa for his account, otherwise it can be left empty. To figure out if the user has mfa enabled, you need to login with username and password first. A http 401 error containing \"MFA required\" allows you to ask the user a current mfa code. Sending username and password again with the mfa code will finalize the login.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "email",
                                    "password"
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/invite/config/text/{organizationID}": {
            "get": {
                "description": "Get the organization's saved invitation text configuration",
                "tags": [
                    "invitation-config"
                ],
                "operationId": "GetInvitationText",
                "responses": {
                    "200": {
                        "description": "custom invitation text configuration",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "InvitationText contains all information about a custom invitation text",
                                    "type": "object",
                                    "properties": {
                                        "organization_id": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "OrganizationID"
                                        },
                                        "text": {
                                            "type": "string",
                                            "x-go-name": "Text"
                                        }
                                    },
                                    "x-go-package": "groupalarm.com/go/user/api/services"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "missing or invalid data"
                    },
                    "403": {
                        "description": "rbac check failed"
                    },
                    "404": {
                        "description": "no configuration found"
                    },
                    "500": {
                        "description": "unexpected error"
                    }
                }
            },
            "put": {
                "description": "Set the organization's invitation text configuration",
                "tags": [
                    "invitation-config"
                ],
                "operationId": "SetInvitationText",
                "responses": {
                    "200": {
                        "description": "configuration saved successfully"
                    },
                    "400": {
                        "description": "missing or invalid data"
                    },
                    "500": {
                        "description": "unexpected error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "InvitationText contains all information about a custom invitation text",
                                "type": "object",
                                "properties": {
                                    "organization_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "x-go-name": "OrganizationID"
                                    },
                                    "text": {
                                        "type": "string",
                                        "x-go-name": "Text"
                                    }
                                },
                                "x-go-package": "groupalarm.com/go/user/api/services"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/mfa": {
            "get": {
                "description": "Check if the current user has MFA enabled or not",
                "tags": [
                    "mfa"
                ],
                "operationId": "MFAIsActive",
                "responses": {
                    "200": {
                        "description": "check was successfully completed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "MFAEnabledResponse contains whether the user has MFA enabled or not",
                                    "type": "object",
                                    "properties": {
                                        "enabled": {
                                            "type": "boolean",
                                            "x-go-name": "Enabled"
                                        }
                                    },
                                    "x-go-package": "groupalarm.com/go/user/api/services"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "missing user id in auth token"
                    },
                    "500": {
                        "description": "unexpected error"
                    }
                }
            },
            "put": {
                "description": "Creates a new, disabled MFA config for the current user",
                "tags": [
                    "mfa"
                ],
                "operationId": "MFACreate",
                "responses": {
                    "200": {
                        "description": "config successfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "MFACreateResponse contains all information for the user to add this account to his MFA app",
                                    "type": "object",
                                    "properties": {
                                        "image": {
                                            "type": "array",
                                            "items": {
                                                "type": "integer",
                                                "format": "uint8"
                                            },
                                            "x-go-name": "Image"
                                        },
                                        "secret": {
                                            "type": "string",
                                            "x-go-name": "Secret"
                                        },
                                        "url": {
                                            "type": "string",
                                            "x-go-name": "URL"
                                        }
                                    },
                                    "x-go-package": "groupalarm.com/go/user/api/services"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "missing user id in auth token"
                    },
                    "500": {
                        "description": "unexpected error"
                    }
                }
            },
            "post": {
                "description": "Enables a new MFA config for the current user",
                "tags": [
                    "mfa"
                ],
                "operationId": "MFAEnable",
                "parameters": [
                    {
                        "description": "current MFA code",
                        "name": "code",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "config successfully enabled"
                    },
                    "400": {
                        "description": "missing user id in auth token"
                    },
                    "500": {
                        "description": "unexpected error"
                    }
                }
            },
            "delete": {
                "description": "Disables the MFA config for the current user",
                "tags": [
                    "mfa"
                ],
                "operationId": "MFADisable",
                "parameters": [
                    {
                        "description": "current MFA code",
                        "name": "code",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "config successfully disabled"
                    },
                    "400": {
                        "description": "missing user id in auth token"
                    },
                    "500": {
                        "description": "unexpected error"
                    }
                }
            }
        },
        "/mfa/backup": {
            "get": {
                "description": "Creates ten new, one-time-use backup codes",
                "tags": [
                    "mfa"
                ],
                "operationId": "MFAGenerateBackupCodes",
                "responses": {
                    "200": {
                        "description": "codes successfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "MFABackupCodesResponse contains a list of one-time-use emergency backup codes",
                                    "type": "object",
                                    "properties": {
                                        "backupCodes": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "x-go-name": "BackupCodes"
                                        }
                                    },
                                    "x-go-package": "groupalarm.com/go/user/api/services"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "missing user id in auth token"
                    },
                    "500": {
                        "description": "unexpected error"
                    }
                }
            }
        },
        "/user": {
            "delete": {
                "description": "Can only be used after leaving all organizations.",
                "tags": [
                    "user"
                ],
                "summary": "Deletes the current user irreversibly.",
                "operationId": "DeleteUser",
                "responses": {
                    "200": {
                        "description": "user was successfully deleted"
                    },
                    "400": {
                        "description": "parameters missing or in wrong format"
                    },
                    "403": {
                        "description": "user is still a member of an organization"
                    },
                    "500": {
                        "description": "unexpected error"
                    }
                }
            }
        },
        "/user-settings": {
            "get": {
                "description": "Get the current user's saved settings or the default settings if none are found",
                "tags": [
                    "settings"
                ],
                "operationId": "GetSettings",
                "responses": {
                    "200": {
                        "description": "user-defined settings",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "UserSettings contains all user-defined settings",
                                    "type": "object",
                                    "properties": {
                                        "checks": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "x-go-name": "Checks"
                                        },
                                        "defaultOrganizationId": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "DefaultOrganizationID"
                                        },
                                        "helpTexts": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "x-go-name": "HelpTexts"
                                        },
                                        "showFeedbackButton": {
                                            "type": "boolean",
                                            "x-go-name": "ShowFeedbackButton"
                                        },
                                        "theme": {
                                            "type": "string",
                                            "x-go-name": "Theme"
                                        },
                                        "tracking": {
                                            "type": "boolean",
                                            "x-go-name": "Tracking"
                                        }
                                    },
                                    "x-go-package": "groupalarm.com/go/user/api/services"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "missing user id in auth token"
                    },
                    "500": {
                        "description": "unexpected error"
                    }
                }
            },
            "put": {
                "description": "Saves the current user's settings",
                "tags": [
                    "settings"
                ],
                "operationId": "StoreSettings",
                "responses": {
                    "200": {
                        "description": "settings successfully saved"
                    },
                    "400": {
                        "description": "missing user id in auth token"
                    },
                    "500": {
                        "description": "unexpected error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "UserSettings contains all user-defined settings",
                                "type": "object",
                                "properties": {
                                    "checks": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "x-go-name": "Checks"
                                    },
                                    "defaultOrganizationId": {
                                        "type": "integer",
                                        "format": "int64",
                                        "x-go-name": "DefaultOrganizationID"
                                    },
                                    "helpTexts": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "x-go-name": "HelpTexts"
                                    },
                                    "showFeedbackButton": {
                                        "type": "boolean",
                                        "x-go-name": "ShowFeedbackButton"
                                    },
                                    "theme": {
                                        "type": "string",
                                        "x-go-name": "Theme"
                                    },
                                    "tracking": {
                                        "type": "boolean",
                                        "x-go-name": "Tracking"
                                    }
                                },
                                "x-go-package": "groupalarm.com/go/user/api/services"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/user/": {
            "get": {
                "description": "Gets the complete user payload from the passed JWT token",
                "tags": [
                    "user"
                ],
                "operationId": "GetUser",
                "responses": {
                    "200": {
                        "description": "complete user payload for JWT token for queried email",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "description": "User is a basic copy of user-service's PublicUser",
                                            "type": "object",
                                            "properties": {
                                                "email": {
                                                    "description": "users email address",
                                                    "type": "string",
                                                    "x-go-name": "EMail"
                                                },
                                                "id": {
                                                    "description": "ID for this user",
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "x-go-name": "ID"
                                                },
                                                "name": {
                                                    "description": "name of the user",
                                                    "type": "string",
                                                    "x-go-name": "Name"
                                                },
                                                "surname": {
                                                    "description": "surname of the user",
                                                    "type": "string",
                                                    "x-go-name": "Surname"
                                                }
                                            },
                                            "x-go-package": "groupalarm.com/go/audit/api/services"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Bearer token couldn't be parsed"
                    },
                    "422": {
                        "description": "Token claims couldn't be parsed"
                    },
                    "500": {
                        "description": "unexpected error"
                    }
                }
            },
            "put": {
                "description": "Updates the user profile",
                "tags": [
                    "user"
                ],
                "operationId": "UpdateUser",
                "responses": {
                    "200": {
                        "description": "user was successfully updated"
                    },
                    "403": {
                        "description": "user can't be edited from a different organization or user doesn't want to be edited by an organization administrator"
                    },
                    "500": {
                        "description": "unexpected error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "UserUpdate describes an user update payload",
                                "type": "object",
                                "required": [
                                    "user"
                                ],
                                "properties": {
                                    "organizationId": {
                                        "description": "id of the editing organization\nnot needed if user is editing himself",
                                        "type": "integer",
                                        "format": "int64",
                                        "x-go-name": "OrganizationID"
                                    },
                                    "user": {
                                        "description": "User is a basic copy of user-service's PublicUser",
                                        "type": "object",
                                        "properties": {
                                            "email": {
                                                "description": "users email address",
                                                "type": "string",
                                                "x-go-name": "EMail"
                                            },
                                            "id": {
                                                "description": "ID for this user",
                                                "type": "integer",
                                                "format": "int64",
                                                "x-go-name": "ID"
                                            },
                                            "name": {
                                                "description": "name of the user",
                                                "type": "string",
                                                "x-go-name": "Name"
                                            },
                                            "surname": {
                                                "description": "surname of the user",
                                                "type": "string",
                                                "x-go-name": "Surname"
                                            }
                                        },
                                        "x-go-package": "groupalarm.com/go/audit/api/services"
                                    }
                                },
                                "x-go-package": "groupalarm.com/go/user/api/services"
                            }
                        }
                    },
                    "description": "passed user update payload with new user preferences",
                    "required": true
                }
            }
        },
        "/user/invite": {
            "post": {
                "description": "Invites an existing or new user to an organization and sends an invitation email to the passed address",
                "tags": [
                    "user"
                ],
                "operationId": "InviteUser",
                "responses": {
                    "200": {
                        "description": "user was successfully invited",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "PublicUser describes a public user payload",
                                    "type": "object",
                                    "properties": {
                                        "availablePreference": {
                                            "description": "defines the status the user has selected; will be set to false if user invitation is pending",
                                            "type": "boolean",
                                            "x-go-name": "AvailablePreference"
                                        },
                                        "availableStatus": {
                                            "description": "DispatchStatus describes the current status of a user",
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-package": "groupalarm.com/go/replication"
                                        },
                                        "avatarURL": {
                                            "description": "URL to the avatar of the user",
                                            "type": "string",
                                            "x-go-name": "AvatarURL"
                                        },
                                        "email": {
                                            "description": "users email address",
                                            "type": "string",
                                            "x-go-name": "Email"
                                        },
                                        "id": {
                                            "description": "ID for this user",
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "ID"
                                        },
                                        "name": {
                                            "description": "name of the user",
                                            "type": "string",
                                            "x-go-name": "Name"
                                        },
                                        "pending": {
                                            "description": "defines an pending invitation (user is known, but hasn't logged in yet)",
                                            "type": "boolean",
                                            "x-go-name": "Pending"
                                        },
                                        "surname": {
                                            "description": "surname of the user",
                                            "type": "string",
                                            "x-go-name": "Surname"
                                        }
                                    },
                                    "x-go-package": "groupalarm.com/go/user/api/services"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "user invite payload is missing or in the wrong format"
                    },
                    "500": {
                        "description": "unexpected error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "UserInvite describes an user invite payload",
                                "type": "object",
                                "required": [
                                    "organization",
                                    "users"
                                ],
                                "properties": {
                                    "organization": {
                                        "description": "Organization payload",
                                        "type": "object",
                                        "properties": {
                                            "availableUsers": {
                                                "description": "AvailableUsers payload",
                                                "type": "object",
                                                "properties": {
                                                    "countAvailable": {
                                                        "description": "count of available users",
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "x-go-name": "CountAvailable"
                                                    },
                                                    "countInEvent": {
                                                        "description": "count of \"in-event\" users",
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "x-go-name": "CountInEvent"
                                                    },
                                                    "countNotAvailable": {
                                                        "description": "count of not available users",
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "x-go-name": "CountNotAvailable"
                                                    }
                                                },
                                                "x-go-package": "groupalarm.com/go/organization/api/services"
                                            },
                                            "availableUsersTotal": {
                                                "description": "AvailableUsers payload",
                                                "type": "object",
                                                "properties": {
                                                    "countAvailable": {
                                                        "description": "count of available users",
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "x-go-name": "CountAvailable"
                                                    },
                                                    "countInEvent": {
                                                        "description": "count of \"in-event\" users",
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "x-go-name": "CountInEvent"
                                                    },
                                                    "countNotAvailable": {
                                                        "description": "count of not available users",
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "x-go-name": "CountNotAvailable"
                                                    }
                                                },
                                                "x-go-package": "groupalarm.com/go/organization/api/services"
                                            },
                                            "description": {
                                                "description": "user defined description",
                                                "type": "string",
                                                "x-go-name": "Description"
                                            },
                                            "hasChildren": {
                                                "description": "defines if it's the parent of any other organization",
                                                "type": "boolean",
                                                "x-go-name": "HasChildren"
                                            },
                                            "id": {
                                                "description": "ID of this organization",
                                                "type": "integer",
                                                "format": "int64",
                                                "x-go-name": "ID"
                                            },
                                            "isDemo": {
                                                "description": "is true, when there is no billing configuration for this organization",
                                                "type": "boolean",
                                                "x-go-name": "IsDemo"
                                            },
                                            "name": {
                                                "description": "user defined name",
                                                "type": "string",
                                                "x-go-name": "Name"
                                            },
                                            "ownerIDs": {
                                                "description": "user id of the organization owner/creator",
                                                "type": "array",
                                                "items": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                },
                                                "x-go-name": "OwnerIDs"
                                            },
                                            "parentID": {
                                                "description": "optional: ID of the parent organization",
                                                "type": "integer",
                                                "format": "int64",
                                                "x-go-name": "ParentID"
                                            }
                                        },
                                        "x-go-package": "groupalarm.com/go/organization/api/services"
                                    },
                                    "users": {
                                        "description": "array of user bulk elements",
                                        "type": "array",
                                        "items": {
                                            "description": "BulkUserElement describes an user bulk element",
                                            "type": "object",
                                            "properties": {
                                                "email": {
                                                    "type": "string",
                                                    "x-go-name": "Email"
                                                },
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "x-go-name": "ID"
                                                },
                                                "labels": {
                                                    "type": "array",
                                                    "items": {
                                                        "description": "Label describes a label payload",
                                                        "type": "object",
                                                        "required": [
                                                            "organizationID",
                                                            "name"
                                                        ],
                                                        "properties": {
                                                            "assignees": {
                                                                "description": "assigned user for this label",
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "integer",
                                                                    "format": "int64"
                                                                },
                                                                "x-go-name": "Assignees"
                                                            },
                                                            "color": {
                                                                "description": "hex color code",
                                                                "type": "string",
                                                                "x-go-name": "Color"
                                                            },
                                                            "description": {
                                                                "description": "description for this labels",
                                                                "type": "string",
                                                                "x-go-name": "Description"
                                                            },
                                                            "id": {
                                                                "description": "id for this label",
                                                                "type": "integer",
                                                                "format": "int64",
                                                                "x-go-name": "ID"
                                                            },
                                                            "name": {
                                                                "description": "name of this label",
                                                                "type": "string",
                                                                "x-go-name": "Name"
                                                            },
                                                            "organizationID": {
                                                                "description": "organization id for this label",
                                                                "type": "integer",
                                                                "format": "int64",
                                                                "x-go-name": "OrganizationID"
                                                            }
                                                        },
                                                        "x-go-package": "groupalarm.com/go/user/api/services"
                                                    },
                                                    "x-go-name": "Labels"
                                                },
                                                "rank": {
                                                    "type": "string",
                                                    "x-go-name": "Rank"
                                                },
                                                "roles": {
                                                    "type": "array",
                                                    "items": {
                                                        "description": "This is used for role interaction",
                                                        "type": "object",
                                                        "title": "Definition of a role payload",
                                                        "required": [
                                                            "name",
                                                            "organizationID"
                                                        ],
                                                        "properties": {
                                                            "description": {
                                                                "description": "Optional description for this role",
                                                                "type": "string",
                                                                "x-go-name": "Description"
                                                            },
                                                            "id": {
                                                                "description": "ID for this role",
                                                                "type": "integer",
                                                                "format": "int64",
                                                                "minimum": 1,
                                                                "x-go-name": "ID"
                                                            },
                                                            "name": {
                                                                "description": "Name for this role",
                                                                "type": "string",
                                                                "x-go-name": "Name"
                                                            },
                                                            "organizationID": {
                                                                "description": "Connected organization ID",
                                                                "type": "integer",
                                                                "format": "int64",
                                                                "minimum": 1,
                                                                "x-go-name": "OrganizationID"
                                                            },
                                                            "type": {
                                                                "description": "Definition of default organization roles",
                                                                "type": "string",
                                                                "x-go-name": "Type"
                                                            }
                                                        },
                                                        "x-go-package": "groupalarm.com/go/rbac/api/services"
                                                    },
                                                    "x-go-name": "Roles"
                                                }
                                            },
                                            "x-go-package": "groupalarm.com/go/user/api/services"
                                        },
                                        "x-go-name": "Users"
                                    }
                                },
                                "x-go-package": "groupalarm.com/go/user/api/services"
                            }
                        }
                    },
                    "description": "invitation payload",
                    "required": true
                }
            }
        },
        "/user/{userID}": {
            "get": {
                "description": "Returns a specific user with the passed api for organization members",
                "tags": [
                    "user"
                ],
                "operationId": "GetSpecificUser",
                "parameters": [
                    {
                        "description": "ID of an user",
                        "name": "userID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "int64"
                        }
                    },
                    {
                        "description": "ID of the organization",
                        "name": "organization",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "returns the requested user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "User is a basic copy of user-service's PublicUser",
                                    "type": "object",
                                    "properties": {
                                        "email": {
                                            "description": "users email address",
                                            "type": "string",
                                            "x-go-name": "EMail"
                                        },
                                        "id": {
                                            "description": "ID for this user",
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "ID"
                                        },
                                        "name": {
                                            "description": "name of the user",
                                            "type": "string",
                                            "x-go-name": "Name"
                                        },
                                        "surname": {
                                            "description": "surname of the user",
                                            "type": "string",
                                            "x-go-name": "Surname"
                                        }
                                    },
                                    "x-go-package": "groupalarm.com/go/audit/api/services"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "unexpected error"
                    }
                }
            }
        },
        "/user/{userID}/{organizationID}": {
            "delete": {
                "description": "Removes a user from an organization",
                "tags": [
                    "user"
                ],
                "operationId": "DeleteUserFromOrganization",
                "parameters": [
                    {
                        "description": "user by his ID",
                        "name": "userID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "int64"
                        }
                    },
                    {
                        "description": "organization by it's ID",
                        "name": "organizationID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user was successfully removed from organization"
                    },
                    "400": {
                        "description": "parameters missing or in the wrong format"
                    },
                    "403": {
                        "description": "the last organization admin can not leave the organization"
                    },
                    "500": {
                        "description": "unexpected error"
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Returns all users from an organization",
                "tags": [
                    "users"
                ],
                "operationId": "GetUsersInOrganization",
                "parameters": [
                    {
                        "description": "organization by it's ID",
                        "name": "organization",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "all users from organization with passed id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "description": "PublicUser describes a public user payload",
                                        "type": "object",
                                        "properties": {
                                            "availablePreference": {
                                                "description": "defines the status the user has selected; will be set to false if user invitation is pending",
                                                "type": "boolean",
                                                "x-go-name": "AvailablePreference"
                                            },
                                            "availableStatus": {
                                                "description": "DispatchStatus describes the current status of a user",
                                                "type": "integer",
                                                "format": "int64",
                                                "x-go-package": "groupalarm.com/go/replication"
                                            },
                                            "avatarURL": {
                                                "description": "URL to the avatar of the user",
                                                "type": "string",
                                                "x-go-name": "AvatarURL"
                                            },
                                            "email": {
                                                "description": "users email address",
                                                "type": "string",
                                                "x-go-name": "Email"
                                            },
                                            "id": {
                                                "description": "ID for this user",
                                                "type": "integer",
                                                "format": "int64",
                                                "x-go-name": "ID"
                                            },
                                            "name": {
                                                "description": "name of the user",
                                                "type": "string",
                                                "x-go-name": "Name"
                                            },
                                            "pending": {
                                                "description": "defines an pending invitation (user is known, but hasn't logged in yet)",
                                                "type": "boolean",
                                                "x-go-name": "Pending"
                                            },
                                            "surname": {
                                                "description": "surname of the user",
                                                "type": "string",
                                                "x-go-name": "Surname"
                                            }
                                        },
                                        "x-go-package": "groupalarm.com/go/user/api/services"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "unexpected error"
                    }
                }
            }
        },
        "/users/availability": {
            "get": {
                "description": "Add a new availability change for the current user or update an existing one",
                "tags": [
                    "availability"
                ],
                "operationId": "AddUserAvailabilityChange",
                "responses": {
                    "201": {
                        "description": "availability change created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "UserAvailabilityChange contains all information for an user's scheduled availability change",
                                    "type": "object",
                                    "properties": {
                                        "duration": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "Duration"
                                        },
                                        "start_time": {
                                            "type": "string",
                                            "format": "date-time",
                                            "x-go-name": "StartTime"
                                        },
                                        "user_id": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "UserID"
                                        }
                                    },
                                    "x-go-package": "groupalarm.com/go/user/api/services"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "invalid data in body"
                    },
                    "500": {
                        "description": "unexpected internal error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "UserAvailabilityChange contains all information for an user's scheduled availability change",
                                "type": "object",
                                "properties": {
                                    "duration": {
                                        "type": "integer",
                                        "format": "int64",
                                        "x-go-name": "Duration"
                                    },
                                    "start_time": {
                                        "type": "string",
                                        "format": "date-time",
                                        "x-go-name": "StartTime"
                                    },
                                    "user_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "x-go-name": "UserID"
                                    }
                                },
                                "x-go-package": "groupalarm.com/go/user/api/services"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/users/pagination": {
            "get": {
                "description": "Returns all users from an organization with pagination",
                "tags": [
                    "users"
                ],
                "operationId": "GetUsersInOrganizationPagination",
                "parameters": [
                    {
                        "description": "organization by it's ID",
                        "name": "organization",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "int64"
                        }
                    },
                    {
                        "description": "max. amount of entries in list",
                        "name": "limit",
                        "in": "query",
                        "schema": {
                            "type": "int64",
                            "minimum": 1,
                            "maximum": 50,
                            "default": 10
                        }
                    },
                    {
                        "description": "amount of entries to skip",
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "int64",
                            "default": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "all users from organization with passed id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "description": "PublicUserList describes a list of PublicUsers for pagination",
                                        "type": "object",
                                        "properties": {
                                            "publicUsers": {
                                                "type": "array",
                                                "items": {
                                                    "description": "PublicUser describes a public user payload",
                                                    "type": "object",
                                                    "properties": {
                                                        "availablePreference": {
                                                            "description": "defines the status the user has selected; will be set to false if user invitation is pending",
                                                            "type": "boolean",
                                                            "x-go-name": "AvailablePreference"
                                                        },
                                                        "availableStatus": {
                                                            "description": "DispatchStatus describes the current status of a user",
                                                            "type": "integer",
                                                            "format": "int64",
                                                            "x-go-package": "groupalarm.com/go/replication"
                                                        },
                                                        "avatarURL": {
                                                            "description": "URL to the avatar of the user",
                                                            "type": "string",
                                                            "x-go-name": "AvatarURL"
                                                        },
                                                        "email": {
                                                            "description": "users email address",
                                                            "type": "string",
                                                            "x-go-name": "Email"
                                                        },
                                                        "id": {
                                                            "description": "ID for this user",
                                                            "type": "integer",
                                                            "format": "int64",
                                                            "x-go-name": "ID"
                                                        },
                                                        "name": {
                                                            "description": "name of the user",
                                                            "type": "string",
                                                            "x-go-name": "Name"
                                                        },
                                                        "pending": {
                                                            "description": "defines an pending invitation (user is known, but hasn't logged in yet)",
                                                            "type": "boolean",
                                                            "x-go-name": "Pending"
                                                        },
                                                        "surname": {
                                                            "description": "surname of the user",
                                                            "type": "string",
                                                            "x-go-name": "Surname"
                                                        }
                                                    },
                                                    "x-go-package": "groupalarm.com/go/user/api/services"
                                                },
                                                "x-go-name": "PublicUsers"
                                            },
                                            "totalPublicUsers": {
                                                "type": "integer",
                                                "format": "int64",
                                                "x-go-name": "TotalPublicUsers"
                                            }
                                        },
                                        "x-go-package": "groupalarm.com/go/user/api/services"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "unexpected error"
                    }
                }
            }
        }
    },
    "servers": [
        {
            "url": "https://app.groupalarm.com/api/v1"
        }
    ],
    "components": {
        "securitySchemes": {
            "API_Token": {
                "description": "To use this API, you need an API-Token from the RBAC settings of your GroupAlarm organization. Place the token inside the HTTP-Header `API-Token` for every request, otherwise the API will return an \"401 Unauthorized\" error for your request.",
                "type": "apiKey",
                "name": "API-TOKEN",
                "in": "header"
            },
            "Personal-Access-Token": {
                "description": "To use this API, you need a Personal Access Token from your profile settings. Place the token inside the HTTP-Header `Personal-Access-Token` for every request, otherwise the API will return an \"401 Unauthorized\" error for your request.",
                "type": "apiKey",
                "name": "Personal-Access-Token",
                "in": "header"
            }
        },
        "schemas": {
            "AccessAllowedResponse": {
                "description": "AccessAllowedResponse contains whether the organization allows access or not",
                "type": "object",
                "properties": {
                    "accessAllowed": {
                        "type": "boolean",
                        "x-go-name": "AccessAllowed"
                    }
                },
                "x-go-package": "groupalarm.com/go/support/api/services"
            },
            "AvailableUsers": {
                "description": "AvailableUsers payload",
                "type": "object",
                "properties": {
                    "countAvailable": {
                        "description": "count of available users",
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "CountAvailable"
                    },
                    "countInEvent": {
                        "description": "count of \"in-event\" users",
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "CountInEvent"
                    },
                    "countNotAvailable": {
                        "description": "count of not available users",
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "CountNotAvailable"
                    }
                },
                "x-go-package": "groupalarm.com/go/organization/api/services"
            },
            "BulkUserElement": {
                "description": "BulkUserElement describes an user bulk element",
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "x-go-name": "Email"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "ID"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "description": "Label describes a label payload",
                            "type": "object",
                            "required": [
                                "organizationID",
                                "name"
                            ],
                            "properties": {
                                "assignees": {
                                    "description": "assigned user for this label",
                                    "type": "array",
                                    "items": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "x-go-name": "Assignees"
                                },
                                "color": {
                                    "description": "hex color code",
                                    "type": "string",
                                    "x-go-name": "Color"
                                },
                                "description": {
                                    "description": "description for this labels",
                                    "type": "string",
                                    "x-go-name": "Description"
                                },
                                "id": {
                                    "description": "id for this label",
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "ID"
                                },
                                "name": {
                                    "description": "name of this label",
                                    "type": "string",
                                    "x-go-name": "Name"
                                },
                                "organizationID": {
                                    "description": "organization id for this label",
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "OrganizationID"
                                }
                            },
                            "x-go-package": "groupalarm.com/go/user/api/services"
                        },
                        "x-go-name": "Labels"
                    },
                    "rank": {
                        "type": "string",
                        "x-go-name": "Rank"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "description": "This is used for role interaction",
                            "type": "object",
                            "title": "Definition of a role payload",
                            "required": [
                                "name",
                                "organizationID"
                            ],
                            "properties": {
                                "description": {
                                    "description": "Optional description for this role",
                                    "type": "string",
                                    "x-go-name": "Description"
                                },
                                "id": {
                                    "description": "ID for this role",
                                    "type": "integer",
                                    "format": "int64",
                                    "minimum": 1,
                                    "x-go-name": "ID"
                                },
                                "name": {
                                    "description": "Name for this role",
                                    "type": "string",
                                    "x-go-name": "Name"
                                },
                                "organizationID": {
                                    "description": "Connected organization ID",
                                    "type": "integer",
                                    "format": "int64",
                                    "minimum": 1,
                                    "x-go-name": "OrganizationID"
                                },
                                "type": {
                                    "description": "Definition of default organization roles",
                                    "type": "string",
                                    "x-go-name": "Type"
                                }
                            },
                            "x-go-package": "groupalarm.com/go/rbac/api/services"
                        },
                        "x-go-name": "Roles"
                    }
                },
                "x-go-package": "groupalarm.com/go/user/api/services"
            },
            "DispatchStatus": {
                "description": "DispatchStatus describes the current status of a user",
                "type": "integer",
                "format": "int64",
                "x-go-package": "groupalarm.com/go/replication"
            },
            "EventCreationItem": {
                "description": "EventCreationItem is used by the different services to create a new audit-log item",
                "type": "object",
                "properties": {
                    "data": {
                        "type": "string",
                        "x-go-name": "Data"
                    },
                    "organizationID": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "OrganizationID"
                    },
                    "service": {
                        "type": "string",
                        "x-go-name": "Service"
                    },
                    "type": {
                        "type": "string",
                        "x-go-name": "Type"
                    },
                    "userID": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "UserID"
                    }
                },
                "x-go-package": "groupalarm.com/go/audit/api/services"
            },
            "EventList": {
                "description": "An EventList contains multiple EventListItems and a TotalEvents count used for pagination",
                "type": "object",
                "properties": {
                    "events": {
                        "description": "event array with events",
                        "type": "array",
                        "items": {
                            "description": "An EventListItem is used as a single audit-log entry in an EventList",
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "data for view",
                                    "type": "string",
                                    "x-go-name": "Data"
                                },
                                "id": {
                                    "description": "id of this item",
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "ID"
                                },
                                "organizationID": {
                                    "description": "connected organization as ID",
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "OrganizationID"
                                },
                                "service": {
                                    "description": "affected service / entity-type",
                                    "type": "string",
                                    "x-go-name": "Service"
                                },
                                "timestamp": {
                                    "description": "timestamp, when action was logged",
                                    "type": "string",
                                    "x-go-name": "Timestamp"
                                },
                                "type": {
                                    "description": "action type [create, edit, delete]",
                                    "type": "string",
                                    "x-go-name": "Type"
                                },
                                "user": {
                                    "description": "User is a basic copy of user-service's PublicUser",
                                    "type": "object",
                                    "properties": {
                                        "email": {
                                            "description": "users email address",
                                            "type": "string",
                                            "x-go-name": "EMail"
                                        },
                                        "id": {
                                            "description": "ID for this user",
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "ID"
                                        },
                                        "name": {
                                            "description": "name of the user",
                                            "type": "string",
                                            "x-go-name": "Name"
                                        },
                                        "surname": {
                                            "description": "surname of the user",
                                            "type": "string",
                                            "x-go-name": "Surname"
                                        }
                                    },
                                    "x-go-package": "groupalarm.com/go/audit/api/services"
                                }
                            },
                            "x-go-package": "groupalarm.com/go/audit/api/services"
                        },
                        "x-go-name": "Events"
                    },
                    "totalEvents": {
                        "description": "total amount of events inside the events array",
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "TotalEvents"
                    }
                },
                "x-go-package": "groupalarm.com/go/audit/api/services"
            },
            "EventListItem": {
                "description": "An EventListItem is used as a single audit-log entry in an EventList",
                "type": "object",
                "properties": {
                    "data": {
                        "description": "data for view",
                        "type": "string",
                        "x-go-name": "Data"
                    },
                    "id": {
                        "description": "id of this item",
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "ID"
                    },
                    "organizationID": {
                        "description": "connected organization as ID",
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "OrganizationID"
                    },
                    "service": {
                        "description": "affected service / entity-type",
                        "type": "string",
                        "x-go-name": "Service"
                    },
                    "timestamp": {
                        "description": "timestamp, when action was logged",
                        "type": "string",
                        "x-go-name": "Timestamp"
                    },
                    "type": {
                        "description": "action type [create, edit, delete]",
                        "type": "string",
                        "x-go-name": "Type"
                    },
                    "user": {
                        "description": "User is a basic copy of user-service's PublicUser",
                        "type": "object",
                        "properties": {
                            "email": {
                                "description": "users email address",
                                "type": "string",
                                "x-go-name": "EMail"
                            },
                            "id": {
                                "description": "ID for this user",
                                "type": "integer",
                                "format": "int64",
                                "x-go-name": "ID"
                            },
                            "name": {
                                "description": "name of the user",
                                "type": "string",
                                "x-go-name": "Name"
                            },
                            "surname": {
                                "description": "surname of the user",
                                "type": "string",
                                "x-go-name": "Surname"
                            }
                        },
                        "x-go-package": "groupalarm.com/go/audit/api/services"
                    }
                },
                "x-go-package": "groupalarm.com/go/audit/api/services"
            },
            "EventOrgCreatedOwnerID": {
                "description": "EventOrgCreatedOwnerID contains the event handler for a owner-created organization",
                "type": "object",
                "x-go-package": "groupalarm.com/go/user/api/services"
            },
            "EventService": {
                "description": "EventService provides all methods needed to list and create audit-log entries",
                "type": "object",
                "x-go-package": "groupalarm.com/go/audit/api/services"
            },
            "ImportResult": {
                "description": "ImportResult describes the result of an import",
                "type": "string",
                "x-go-package": "groupalarm.com/go/user/api/services"
            },
            "InvitationText": {
                "description": "InvitationText contains all information about a custom invitation text",
                "type": "object",
                "properties": {
                    "organization_id": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "OrganizationID"
                    },
                    "text": {
                        "type": "string",
                        "x-go-name": "Text"
                    }
                },
                "x-go-package": "groupalarm.com/go/user/api/services"
            },
            "InvitationTextService": {
                "description": "InvitationTextService provides all functions needed to manage an organization's invitation text",
                "type": "object",
                "x-go-package": "groupalarm.com/go/user/api/services"
            },
            "Label": {
                "description": "Label describes a label payload",
                "type": "object",
                "required": [
                    "organizationID",
                    "name"
                ],
                "properties": {
                    "assignees": {
                        "description": "assigned user for this label",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "x-go-name": "Assignees"
                    },
                    "color": {
                        "description": "hex color code",
                        "type": "string",
                        "x-go-name": "Color"
                    },
                    "description": {
                        "description": "description for this labels",
                        "type": "string",
                        "x-go-name": "Description"
                    },
                    "id": {
                        "description": "id for this label",
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "ID"
                    },
                    "name": {
                        "description": "name of this label",
                        "type": "string",
                        "x-go-name": "Name"
                    },
                    "organizationID": {
                        "description": "organization id for this label",
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "OrganizationID"
                    }
                },
                "x-go-package": "groupalarm.com/go/user/api/services"
            },
            "MFABackupCodesResponse": {
                "description": "MFABackupCodesResponse contains a list of one-time-use emergency backup codes",
                "type": "object",
                "properties": {
                    "backupCodes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "x-go-name": "BackupCodes"
                    }
                },
                "x-go-package": "groupalarm.com/go/user/api/services"
            },
            "MFACreateResponse": {
                "description": "MFACreateResponse contains all information for the user to add this account to his MFA app",
                "type": "object",
                "properties": {
                    "image": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "uint8"
                        },
                        "x-go-name": "Image"
                    },
                    "secret": {
                        "type": "string",
                        "x-go-name": "Secret"
                    },
                    "url": {
                        "type": "string",
                        "x-go-name": "URL"
                    }
                },
                "x-go-package": "groupalarm.com/go/user/api/services"
            },
            "MFAEnabledResponse": {
                "description": "MFAEnabledResponse contains whether the user has MFA enabled or not",
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "x-go-name": "Enabled"
                    }
                },
                "x-go-package": "groupalarm.com/go/user/api/services"
            },
            "MFAService": {
                "description": "MFAService defines all functions a multi-factor-authentication service has to implement",
                "type": "object",
                "x-go-package": "groupalarm.com/go/user/api/services"
            },
            "MembercheckResult": {
                "description": "MembercheckResult describes a user-organization-membercheck result",
                "type": "object",
                "properties": {
                    "organizationId": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "OrganizationID"
                    },
                    "result": {
                        "type": "boolean",
                        "x-go-name": "Result"
                    },
                    "userId": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "UserID"
                    }
                },
                "x-go-package": "groupalarm.com/go/user/api/services"
            },
            "MergedUserRole": {
                "type": "object",
                "properties": {
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "name",
                                "organizationID"
                            ],
                            "properties": {
                                "description": {
                                    "description": "Optional description for this role",
                                    "type": "string",
                                    "x-go-name": "Description"
                                },
                                "id": {
                                    "description": "ID for this role",
                                    "type": "integer",
                                    "format": "int64",
                                    "minimum": 1,
                                    "x-go-name": "ID"
                                },
                                "name": {
                                    "description": "Name for this role",
                                    "type": "string",
                                    "x-go-name": "Name"
                                },
                                "organizationID": {
                                    "description": "Connected organization ID",
                                    "type": "integer",
                                    "format": "int64",
                                    "minimum": 1,
                                    "x-go-name": "OrganizationID"
                                },
                                "role_access": {
                                    "type": "array",
                                    "items": {
                                        "description": "This is used for user to role assignment",
                                        "type": "object",
                                        "title": "Definition of a user-role payload",
                                        "required": [
                                            "endpoints",
                                            "methods"
                                        ],
                                        "properties": {
                                            "endpoints": {
                                                "description": "Concerning endpoints/services",
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "x-go-name": "Endpoints"
                                            },
                                            "id": {
                                                "description": "ID of this role access",
                                                "type": "integer",
                                                "format": "int64",
                                                "minimum": 1,
                                                "x-go-name": "ID"
                                            },
                                            "methods": {
                                                "description": "Allowed HTTP methods",
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "x-go-name": "Methods"
                                            },
                                            "roleID": {
                                                "description": "ID of the role",
                                                "type": "integer",
                                                "format": "int64",
                                                "minimum": 1,
                                                "x-go-name": "RoleID"
                                            }
                                        },
                                        "x-go-package": "groupalarm.com/go/rbac/api/services"
                                    },
                                    "x-go-name": "RoleAccess"
                                },
                                "type": {
                                    "description": "Definition of default organization roles",
                                    "type": "string",
                                    "x-go-name": "Type"
                                }
                            },
                            "x-go-package": "groupalarm.com/go/rbac/api/services"
                        },
                        "x-go-name": "Roles"
                    },
                    "userID": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "UserID"
                    }
                },
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "Organization": {
                "description": "Organization payload",
                "type": "object",
                "properties": {
                    "availableUsers": {
                        "description": "AvailableUsers payload",
                        "type": "object",
                        "properties": {
                            "countAvailable": {
                                "description": "count of available users",
                                "type": "integer",
                                "format": "int64",
                                "x-go-name": "CountAvailable"
                            },
                            "countInEvent": {
                                "description": "count of \"in-event\" users",
                                "type": "integer",
                                "format": "int64",
                                "x-go-name": "CountInEvent"
                            },
                            "countNotAvailable": {
                                "description": "count of not available users",
                                "type": "integer",
                                "format": "int64",
                                "x-go-name": "CountNotAvailable"
                            }
                        },
                        "x-go-package": "groupalarm.com/go/organization/api/services"
                    },
                    "availableUsersTotal": {
                        "description": "AvailableUsers payload",
                        "type": "object",
                        "properties": {
                            "countAvailable": {
                                "description": "count of available users",
                                "type": "integer",
                                "format": "int64",
                                "x-go-name": "CountAvailable"
                            },
                            "countInEvent": {
                                "description": "count of \"in-event\" users",
                                "type": "integer",
                                "format": "int64",
                                "x-go-name": "CountInEvent"
                            },
                            "countNotAvailable": {
                                "description": "count of not available users",
                                "type": "integer",
                                "format": "int64",
                                "x-go-name": "CountNotAvailable"
                            }
                        },
                        "x-go-package": "groupalarm.com/go/organization/api/services"
                    },
                    "description": {
                        "description": "user defined description",
                        "type": "string",
                        "x-go-name": "Description"
                    },
                    "hasChildren": {
                        "description": "defines if it's the parent of any other organization",
                        "type": "boolean",
                        "x-go-name": "HasChildren"
                    },
                    "id": {
                        "description": "ID of this organization",
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "ID"
                    },
                    "isDemo": {
                        "description": "is true, when there is no billing configuration for this organization",
                        "type": "boolean",
                        "x-go-name": "IsDemo"
                    },
                    "name": {
                        "description": "user defined name",
                        "type": "string",
                        "x-go-name": "Name"
                    },
                    "ownerIDs": {
                        "description": "user id of the organization owner/creator",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "x-go-name": "OwnerIDs"
                    },
                    "parentID": {
                        "description": "optional: ID of the parent organization",
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "ParentID"
                    }
                },
                "x-go-package": "groupalarm.com/go/organization/api/services"
            },
            "OrganizationChilds": {
                "description": "OrganizationChilds payload",
                "type": "object",
                "properties": {
                    "childs": {
                        "description": "Child organizations of the Organization",
                        "type": "array",
                        "items": {
                            "description": "Organization payload",
                            "type": "object",
                            "properties": {
                                "availableUsers": {
                                    "description": "AvailableUsers payload",
                                    "type": "object",
                                    "properties": {
                                        "countAvailable": {
                                            "description": "count of available users",
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "CountAvailable"
                                        },
                                        "countInEvent": {
                                            "description": "count of \"in-event\" users",
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "CountInEvent"
                                        },
                                        "countNotAvailable": {
                                            "description": "count of not available users",
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "CountNotAvailable"
                                        }
                                    },
                                    "x-go-package": "groupalarm.com/go/organization/api/services"
                                },
                                "availableUsersTotal": {
                                    "description": "AvailableUsers payload",
                                    "type": "object",
                                    "properties": {
                                        "countAvailable": {
                                            "description": "count of available users",
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "CountAvailable"
                                        },
                                        "countInEvent": {
                                            "description": "count of \"in-event\" users",
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "CountInEvent"
                                        },
                                        "countNotAvailable": {
                                            "description": "count of not available users",
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "CountNotAvailable"
                                        }
                                    },
                                    "x-go-package": "groupalarm.com/go/organization/api/services"
                                },
                                "description": {
                                    "description": "user defined description",
                                    "type": "string",
                                    "x-go-name": "Description"
                                },
                                "hasChildren": {
                                    "description": "defines if it's the parent of any other organization",
                                    "type": "boolean",
                                    "x-go-name": "HasChildren"
                                },
                                "id": {
                                    "description": "ID of this organization",
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "ID"
                                },
                                "isDemo": {
                                    "description": "is true, when there is no billing configuration for this organization",
                                    "type": "boolean",
                                    "x-go-name": "IsDemo"
                                },
                                "name": {
                                    "description": "user defined name",
                                    "type": "string",
                                    "x-go-name": "Name"
                                },
                                "ownerIDs": {
                                    "description": "user id of the organization owner/creator",
                                    "type": "array",
                                    "items": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "x-go-name": "OwnerIDs"
                                },
                                "parentID": {
                                    "description": "optional: ID of the parent organization",
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "ParentID"
                                }
                            },
                            "x-go-package": "groupalarm.com/go/organization/api/services"
                        },
                        "x-go-name": "Organizations"
                    },
                    "path": {
                        "description": "Path in the tree to the Organization (e.g. for breadcrumbs)",
                        "type": "array",
                        "items": {
                            "description": "Organization payload",
                            "type": "object",
                            "properties": {
                                "availableUsers": {
                                    "description": "AvailableUsers payload",
                                    "type": "object",
                                    "properties": {
                                        "countAvailable": {
                                            "description": "count of available users",
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "CountAvailable"
                                        },
                                        "countInEvent": {
                                            "description": "count of \"in-event\" users",
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "CountInEvent"
                                        },
                                        "countNotAvailable": {
                                            "description": "count of not available users",
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "CountNotAvailable"
                                        }
                                    },
                                    "x-go-package": "groupalarm.com/go/organization/api/services"
                                },
                                "availableUsersTotal": {
                                    "description": "AvailableUsers payload",
                                    "type": "object",
                                    "properties": {
                                        "countAvailable": {
                                            "description": "count of available users",
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "CountAvailable"
                                        },
                                        "countInEvent": {
                                            "description": "count of \"in-event\" users",
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "CountInEvent"
                                        },
                                        "countNotAvailable": {
                                            "description": "count of not available users",
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "CountNotAvailable"
                                        }
                                    },
                                    "x-go-package": "groupalarm.com/go/organization/api/services"
                                },
                                "description": {
                                    "description": "user defined description",
                                    "type": "string",
                                    "x-go-name": "Description"
                                },
                                "hasChildren": {
                                    "description": "defines if it's the parent of any other organization",
                                    "type": "boolean",
                                    "x-go-name": "HasChildren"
                                },
                                "id": {
                                    "description": "ID of this organization",
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "ID"
                                },
                                "isDemo": {
                                    "description": "is true, when there is no billing configuration for this organization",
                                    "type": "boolean",
                                    "x-go-name": "IsDemo"
                                },
                                "name": {
                                    "description": "user defined name",
                                    "type": "string",
                                    "x-go-name": "Name"
                                },
                                "ownerIDs": {
                                    "description": "user id of the organization owner/creator",
                                    "type": "array",
                                    "items": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "x-go-name": "OwnerIDs"
                                },
                                "parentID": {
                                    "description": "optional: ID of the parent organization",
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "ParentID"
                                }
                            },
                            "x-go-package": "groupalarm.com/go/organization/api/services"
                        },
                        "x-go-name": "Path"
                    },
                    "totalChilds": {
                        "description": "total amount of children",
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "TotalChilds"
                    }
                },
                "x-go-package": "groupalarm.com/go/organization/api/services"
            },
            "OrganizationList": {
                "description": "OrganizationList payload",
                "type": "object",
                "properties": {
                    "organizations": {
                        "type": "array",
                        "items": {
                            "description": "Organization payload",
                            "type": "object",
                            "properties": {
                                "availableUsers": {
                                    "description": "AvailableUsers payload",
                                    "type": "object",
                                    "properties": {
                                        "countAvailable": {
                                            "description": "count of available users",
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "CountAvailable"
                                        },
                                        "countInEvent": {
                                            "description": "count of \"in-event\" users",
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "CountInEvent"
                                        },
                                        "countNotAvailable": {
                                            "description": "count of not available users",
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "CountNotAvailable"
                                        }
                                    },
                                    "x-go-package": "groupalarm.com/go/organization/api/services"
                                },
                                "availableUsersTotal": {
                                    "description": "AvailableUsers payload",
                                    "type": "object",
                                    "properties": {
                                        "countAvailable": {
                                            "description": "count of available users",
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "CountAvailable"
                                        },
                                        "countInEvent": {
                                            "description": "count of \"in-event\" users",
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "CountInEvent"
                                        },
                                        "countNotAvailable": {
                                            "description": "count of not available users",
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "CountNotAvailable"
                                        }
                                    },
                                    "x-go-package": "groupalarm.com/go/organization/api/services"
                                },
                                "description": {
                                    "description": "user defined description",
                                    "type": "string",
                                    "x-go-name": "Description"
                                },
                                "hasChildren": {
                                    "description": "defines if it's the parent of any other organization",
                                    "type": "boolean",
                                    "x-go-name": "HasChildren"
                                },
                                "id": {
                                    "description": "ID of this organization",
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "ID"
                                },
                                "isDemo": {
                                    "description": "is true, when there is no billing configuration for this organization",
                                    "type": "boolean",
                                    "x-go-name": "IsDemo"
                                },
                                "name": {
                                    "description": "user defined name",
                                    "type": "string",
                                    "x-go-name": "Name"
                                },
                                "ownerIDs": {
                                    "description": "user id of the organization owner/creator",
                                    "type": "array",
                                    "items": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "x-go-name": "OwnerIDs"
                                },
                                "parentID": {
                                    "description": "optional: ID of the parent organization",
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "ParentID"
                                }
                            },
                            "x-go-package": "groupalarm.com/go/organization/api/services"
                        },
                        "x-go-name": "Organizations"
                    },
                    "totalOrganizations": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "TotalOrganizations"
                    }
                },
                "x-go-package": "groupalarm.com/go/organization/api/services"
            },
            "OrganizationService": {
                "description": "OrganizationService provides all functions needed to check for expired accesses to organizations",
                "type": "object",
                "properties": {
                    "CheckForExpiredAccesses": {
                        "type": "string"
                    }
                },
                "x-go-package": "groupalarm.com/go/support/api/services"
            },
            "OrganizationUserCount": {
                "description": "OrganizationUserCount allows us to save the amount of users in an organization",
                "type": "object",
                "properties": {
                    "organizationID": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "OrganizationID"
                    },
                    "userCount": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "UserCount"
                    }
                },
                "x-go-package": "groupalarm.com/go/organization/api/services"
            },
            "PersonalAccessToken": {
                "description": "This is used for personal access token interaction",
                "type": "object",
                "title": "Definition of a personal access token payload",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "ID"
                    },
                    "name": {
                        "type": "string",
                        "x-go-name": "Name"
                    },
                    "token": {
                        "type": "string",
                        "x-go-name": "Token"
                    },
                    "userID": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "UserID"
                    }
                },
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "PersonalAccessTokenRequest": {
                "description": "This is used for creation of personal access tokens",
                "type": "object",
                "title": "Definition of a personal access token request payload",
                "properties": {
                    "name": {
                        "type": "string",
                        "x-go-name": "Name"
                    },
                    "userID": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "UserID"
                    }
                },
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "PersonalAccessTokenService": {
                "description": "PersonalAccessTokenService contains all methods needed to implement our service",
                "type": "object",
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "PostgresEventService": {
                "description": "PostgresEventService is our implementation of EventService using a Postgres database",
                "type": "object",
                "x-go-package": "groupalarm.com/go/audit/api/services"
            },
            "PostgresInvitationTextService": {
                "description": "PostgresInvitationTextService is our implementation of InvitationTextService using a Postgres database",
                "type": "object",
                "x-go-package": "groupalarm.com/go/user/api/services"
            },
            "PostgresMFAService": {
                "description": "PostgresMFAService is our implementation of MFAService using a Postgres database",
                "type": "object",
                "x-go-package": "groupalarm.com/go/user/api/services"
            },
            "PostgresOrganizationService": {
                "description": "PostgresOrganizationService is our implementation of OrganizationService using a Postgres database",
                "type": "object",
                "x-go-package": "groupalarm.com/go/support/api/services"
            },
            "PostgresPersonalAccessTokenService": {
                "description": "PostgresPersonalAccessTokenService is our PersonalAccessTokenService implementation using a database",
                "type": "object",
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "PostgresRoleAccessService": {
                "type": "object",
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "PostgresRoleService": {
                "type": "object",
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "PostgresServiceService": {
                "type": "object",
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "PostgresSupportAgentService": {
                "description": "PostgresSupportAgentService is our implementation of SupportAgentService using a Postgres database",
                "type": "object",
                "x-go-package": "groupalarm.com/go/support/api/services"
            },
            "PostgresTokenService": {
                "type": "object",
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "PostgresUserAvailabilityChangeService": {
                "description": "PostgresUserAvailabilityChangeService is our implementation of UserAvailabilityChangeService using a Postgres database",
                "type": "object",
                "x-go-package": "groupalarm.com/go/user/api/services"
            },
            "PostgresUserRolesService": {
                "type": "object",
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "PostgresUserService": {
                "description": "PostgresUserService implements all methods from the UserService interface",
                "type": "object",
                "x-go-package": "groupalarm.com/go/user/api/services"
            },
            "PostgresUserSettingsService": {
                "description": "PostgresUserSettingsService is our implementation of UserSettingsService using a Postgres database",
                "type": "object",
                "x-go-package": "groupalarm.com/go/user/api/services"
            },
            "PublicUser": {
                "description": "PublicUser describes a public user payload",
                "type": "object",
                "properties": {
                    "availablePreference": {
                        "description": "defines the status the user has selected; will be set to false if user invitation is pending",
                        "type": "boolean",
                        "x-go-name": "AvailablePreference"
                    },
                    "availableStatus": {
                        "description": "DispatchStatus describes the current status of a user",
                        "type": "integer",
                        "format": "int64",
                        "x-go-package": "groupalarm.com/go/replication"
                    },
                    "avatarURL": {
                        "description": "URL to the avatar of the user",
                        "type": "string",
                        "x-go-name": "AvatarURL"
                    },
                    "email": {
                        "description": "users email address",
                        "type": "string",
                        "x-go-name": "Email"
                    },
                    "id": {
                        "description": "ID for this user",
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "ID"
                    },
                    "name": {
                        "description": "name of the user",
                        "type": "string",
                        "x-go-name": "Name"
                    },
                    "pending": {
                        "description": "defines an pending invitation (user is known, but hasn't logged in yet)",
                        "type": "boolean",
                        "x-go-name": "Pending"
                    },
                    "surname": {
                        "description": "surname of the user",
                        "type": "string",
                        "x-go-name": "Surname"
                    }
                },
                "x-go-package": "groupalarm.com/go/user/api/services"
            },
            "PublicUserList": {
                "description": "PublicUserList describes a list of PublicUsers for pagination",
                "type": "object",
                "properties": {
                    "publicUsers": {
                        "type": "array",
                        "items": {
                            "description": "PublicUser describes a public user payload",
                            "type": "object",
                            "properties": {
                                "availablePreference": {
                                    "description": "defines the status the user has selected; will be set to false if user invitation is pending",
                                    "type": "boolean",
                                    "x-go-name": "AvailablePreference"
                                },
                                "availableStatus": {
                                    "description": "DispatchStatus describes the current status of a user",
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-package": "groupalarm.com/go/replication"
                                },
                                "avatarURL": {
                                    "description": "URL to the avatar of the user",
                                    "type": "string",
                                    "x-go-name": "AvatarURL"
                                },
                                "email": {
                                    "description": "users email address",
                                    "type": "string",
                                    "x-go-name": "Email"
                                },
                                "id": {
                                    "description": "ID for this user",
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "ID"
                                },
                                "name": {
                                    "description": "name of the user",
                                    "type": "string",
                                    "x-go-name": "Name"
                                },
                                "pending": {
                                    "description": "defines an pending invitation (user is known, but hasn't logged in yet)",
                                    "type": "boolean",
                                    "x-go-name": "Pending"
                                },
                                "surname": {
                                    "description": "surname of the user",
                                    "type": "string",
                                    "x-go-name": "Surname"
                                }
                            },
                            "x-go-package": "groupalarm.com/go/user/api/services"
                        },
                        "x-go-name": "PublicUsers"
                    },
                    "totalPublicUsers": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "TotalPublicUsers"
                    }
                },
                "x-go-package": "groupalarm.com/go/user/api/services"
            },
            "Role": {
                "description": "This is used for role interaction",
                "type": "object",
                "title": "Definition of a role payload",
                "required": [
                    "name",
                    "organizationID"
                ],
                "properties": {
                    "description": {
                        "description": "Optional description for this role",
                        "type": "string",
                        "x-go-name": "Description"
                    },
                    "id": {
                        "description": "ID for this role",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "x-go-name": "ID"
                    },
                    "name": {
                        "description": "Name for this role",
                        "type": "string",
                        "x-go-name": "Name"
                    },
                    "organizationID": {
                        "description": "Connected organization ID",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "x-go-name": "OrganizationID"
                    },
                    "type": {
                        "description": "Definition of default organization roles",
                        "type": "string",
                        "x-go-name": "Type"
                    }
                },
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "RoleAccess": {
                "description": "This is used for user to role assignment",
                "type": "object",
                "title": "Definition of a user-role payload",
                "required": [
                    "endpoints",
                    "methods"
                ],
                "properties": {
                    "endpoints": {
                        "description": "Concerning endpoints/services",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "x-go-name": "Endpoints"
                    },
                    "id": {
                        "description": "ID of this role access",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "x-go-name": "ID"
                    },
                    "methods": {
                        "description": "Allowed HTTP methods",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "x-go-name": "Methods"
                    },
                    "roleID": {
                        "description": "ID of the role",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "x-go-name": "RoleID"
                    }
                },
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "RoleAccessService": {
                "type": "object",
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "RoleService": {
                "type": "object",
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "RoleWithAccess": {
                "type": "object",
                "required": [
                    "name",
                    "organizationID"
                ],
                "properties": {
                    "description": {
                        "description": "Optional description for this role",
                        "type": "string",
                        "x-go-name": "Description"
                    },
                    "id": {
                        "description": "ID for this role",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "x-go-name": "ID"
                    },
                    "name": {
                        "description": "Name for this role",
                        "type": "string",
                        "x-go-name": "Name"
                    },
                    "organizationID": {
                        "description": "Connected organization ID",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "x-go-name": "OrganizationID"
                    },
                    "role_access": {
                        "type": "array",
                        "items": {
                            "description": "This is used for user to role assignment",
                            "type": "object",
                            "title": "Definition of a user-role payload",
                            "required": [
                                "endpoints",
                                "methods"
                            ],
                            "properties": {
                                "endpoints": {
                                    "description": "Concerning endpoints/services",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "x-go-name": "Endpoints"
                                },
                                "id": {
                                    "description": "ID of this role access",
                                    "type": "integer",
                                    "format": "int64",
                                    "minimum": 1,
                                    "x-go-name": "ID"
                                },
                                "methods": {
                                    "description": "Allowed HTTP methods",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "x-go-name": "Methods"
                                },
                                "roleID": {
                                    "description": "ID of the role",
                                    "type": "integer",
                                    "format": "int64",
                                    "minimum": 1,
                                    "x-go-name": "RoleID"
                                }
                            },
                            "x-go-package": "groupalarm.com/go/rbac/api/services"
                        },
                        "x-go-name": "RoleAccess"
                    },
                    "type": {
                        "description": "Definition of default organization roles",
                        "type": "string",
                        "x-go-name": "Type"
                    }
                },
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "Service": {
                "description": "This is used for service interaction",
                "type": "object",
                "title": "Definition of a service payload",
                "required": [
                    "name",
                    "description",
                    "methods"
                ],
                "properties": {
                    "description": {
                        "description": "Description of this service/endpoint",
                        "type": "string",
                        "x-go-name": "Description"
                    },
                    "methods": {
                        "description": "Allowed methods for this service",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "x-go-name": "Methods"
                    },
                    "name": {
                        "description": "Name of this service/endpoint",
                        "type": "string",
                        "x-go-name": "Name"
                    }
                },
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "ServiceService": {
                "type": "object",
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "SupportAgentResponse": {
                "description": "SupportAgentResponse contains whether the user is a support agent or not",
                "type": "object",
                "properties": {
                    "isSupportAgent": {
                        "type": "boolean",
                        "x-go-name": "IsSupportAgent"
                    }
                },
                "x-go-package": "groupalarm.com/go/support/api/services"
            },
            "SupportAgentService": {
                "description": "SupportAgentService provides all functions needed to manage support agents",
                "type": "object",
                "x-go-package": "groupalarm.com/go/support/api/services"
            },
            "SupportOrganization": {
                "description": "SupportOrganization represents a single organization and the timestamp when it allowed support agents to access it",
                "type": "object",
                "properties": {
                    "allowedTimestamp": {
                        "type": "string",
                        "format": "date-time",
                        "x-go-name": "AllowedTimestamp"
                    },
                    "organizationId": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "OrganizationID"
                    },
                    "organizationName": {
                        "type": "string",
                        "x-go-name": "OrganizationName"
                    }
                },
                "x-go-package": "groupalarm.com/go/support/api/services"
            },
            "SupportOrganizationList": {
                "description": "A SupportOrganizationList contains multiple SupportOrganizations and a TotalSupportOrganization count used for pagination",
                "type": "object",
                "properties": {
                    "supportOrganizations": {
                        "type": "array",
                        "items": {
                            "description": "SupportOrganization represents a single organization and the timestamp when it allowed support agents to access it",
                            "type": "object",
                            "properties": {
                                "allowedTimestamp": {
                                    "type": "string",
                                    "format": "date-time",
                                    "x-go-name": "AllowedTimestamp"
                                },
                                "organizationId": {
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "OrganizationID"
                                },
                                "organizationName": {
                                    "type": "string",
                                    "x-go-name": "OrganizationName"
                                }
                            },
                            "x-go-package": "groupalarm.com/go/support/api/services"
                        },
                        "x-go-name": "SupportOrganizations"
                    },
                    "totalSupportOrganizations": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "TotalSupportOrganizations"
                    }
                },
                "x-go-package": "groupalarm.com/go/support/api/services"
            },
            "Token": {
                "description": "This is used for token interaction",
                "type": "object",
                "title": "Definition of a token payload",
                "required": [
                    "organizationID",
                    "name",
                    "token"
                ],
                "properties": {
                    "id": {
                        "description": "ID for this token",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "x-go-name": "ID"
                    },
                    "name": {
                        "description": "Name for this token",
                        "type": "string",
                        "x-go-name": "Name"
                    },
                    "organizationID": {
                        "description": "Connected organization ID",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "x-go-name": "OrganizationID"
                    },
                    "token": {
                        "description": "Actual token",
                        "type": "string",
                        "x-go-name": "Token"
                    }
                },
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "TokenRequest": {
                "description": "This is used for creation of tokens",
                "type": "object",
                "title": "Definition of a token request payload",
                "required": [
                    "organizationID",
                    "name"
                ],
                "properties": {
                    "name": {
                        "description": "Name for this token",
                        "type": "string",
                        "x-go-name": "Name"
                    },
                    "organizationID": {
                        "description": "Connected organization ID",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "x-go-name": "OrganizationID"
                    }
                },
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "TokenService": {
                "type": "object",
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "User": {
                "description": "User is a basic copy of user-service's PublicUser",
                "type": "object",
                "properties": {
                    "email": {
                        "description": "users email address",
                        "type": "string",
                        "x-go-name": "EMail"
                    },
                    "id": {
                        "description": "ID for this user",
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "ID"
                    },
                    "name": {
                        "description": "name of the user",
                        "type": "string",
                        "x-go-name": "Name"
                    },
                    "surname": {
                        "description": "surname of the user",
                        "type": "string",
                        "x-go-name": "Surname"
                    }
                },
                "x-go-package": "groupalarm.com/go/audit/api/services"
            },
            "UserAvailabilityChange": {
                "description": "UserAvailabilityChange contains all information for an user's scheduled availability change",
                "type": "object",
                "properties": {
                    "duration": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "Duration"
                    },
                    "start_time": {
                        "type": "string",
                        "format": "date-time",
                        "x-go-name": "StartTime"
                    },
                    "user_id": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "UserID"
                    }
                },
                "x-go-package": "groupalarm.com/go/user/api/services"
            },
            "UserAvailabilityChangeService": {
                "description": "UserAvailabilityChangeService provides all functions needed to manage users' availability change requests",
                "type": "object",
                "x-go-package": "groupalarm.com/go/user/api/services"
            },
            "UserCreationRequest": {
                "description": "UserCreationRequest describes a user create payload",
                "type": "object",
                "properties": {
                    "email": {
                        "description": "users email",
                        "type": "string",
                        "x-go-name": "Email"
                    },
                    "name": {
                        "description": "name of the user",
                        "type": "string",
                        "x-go-name": "Name"
                    },
                    "organization": {
                        "description": "Organization payload",
                        "type": "object",
                        "properties": {
                            "availableUsers": {
                                "description": "AvailableUsers payload",
                                "type": "object",
                                "properties": {
                                    "countAvailable": {
                                        "description": "count of available users",
                                        "type": "integer",
                                        "format": "int64",
                                        "x-go-name": "CountAvailable"
                                    },
                                    "countInEvent": {
                                        "description": "count of \"in-event\" users",
                                        "type": "integer",
                                        "format": "int64",
                                        "x-go-name": "CountInEvent"
                                    },
                                    "countNotAvailable": {
                                        "description": "count of not available users",
                                        "type": "integer",
                                        "format": "int64",
                                        "x-go-name": "CountNotAvailable"
                                    }
                                },
                                "x-go-package": "groupalarm.com/go/organization/api/services"
                            },
                            "availableUsersTotal": {
                                "description": "AvailableUsers payload",
                                "type": "object",
                                "properties": {
                                    "countAvailable": {
                                        "description": "count of available users",
                                        "type": "integer",
                                        "format": "int64",
                                        "x-go-name": "CountAvailable"
                                    },
                                    "countInEvent": {
                                        "description": "count of \"in-event\" users",
                                        "type": "integer",
                                        "format": "int64",
                                        "x-go-name": "CountInEvent"
                                    },
                                    "countNotAvailable": {
                                        "description": "count of not available users",
                                        "type": "integer",
                                        "format": "int64",
                                        "x-go-name": "CountNotAvailable"
                                    }
                                },
                                "x-go-package": "groupalarm.com/go/organization/api/services"
                            },
                            "description": {
                                "description": "user defined description",
                                "type": "string",
                                "x-go-name": "Description"
                            },
                            "hasChildren": {
                                "description": "defines if it's the parent of any other organization",
                                "type": "boolean",
                                "x-go-name": "HasChildren"
                            },
                            "id": {
                                "description": "ID of this organization",
                                "type": "integer",
                                "format": "int64",
                                "x-go-name": "ID"
                            },
                            "isDemo": {
                                "description": "is true, when there is no billing configuration for this organization",
                                "type": "boolean",
                                "x-go-name": "IsDemo"
                            },
                            "name": {
                                "description": "user defined name",
                                "type": "string",
                                "x-go-name": "Name"
                            },
                            "ownerIDs": {
                                "description": "user id of the organization owner/creator",
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int64"
                                },
                                "x-go-name": "OwnerIDs"
                            },
                            "parentID": {
                                "description": "optional: ID of the parent organization",
                                "type": "integer",
                                "format": "int64",
                                "x-go-name": "ParentID"
                            }
                        },
                        "x-go-package": "groupalarm.com/go/organization/api/services"
                    },
                    "surname": {
                        "description": "surname of the user",
                        "type": "string",
                        "x-go-name": "Surname"
                    }
                },
                "x-go-package": "groupalarm.com/go/user/api/services"
            },
            "UserInvite": {
                "description": "UserInvite describes an user invite payload",
                "type": "object",
                "required": [
                    "organization",
                    "users"
                ],
                "properties": {
                    "organization": {
                        "description": "Organization payload",
                        "type": "object",
                        "properties": {
                            "availableUsers": {
                                "description": "AvailableUsers payload",
                                "type": "object",
                                "properties": {
                                    "countAvailable": {
                                        "description": "count of available users",
                                        "type": "integer",
                                        "format": "int64",
                                        "x-go-name": "CountAvailable"
                                    },
                                    "countInEvent": {
                                        "description": "count of \"in-event\" users",
                                        "type": "integer",
                                        "format": "int64",
                                        "x-go-name": "CountInEvent"
                                    },
                                    "countNotAvailable": {
                                        "description": "count of not available users",
                                        "type": "integer",
                                        "format": "int64",
                                        "x-go-name": "CountNotAvailable"
                                    }
                                },
                                "x-go-package": "groupalarm.com/go/organization/api/services"
                            },
                            "availableUsersTotal": {
                                "description": "AvailableUsers payload",
                                "type": "object",
                                "properties": {
                                    "countAvailable": {
                                        "description": "count of available users",
                                        "type": "integer",
                                        "format": "int64",
                                        "x-go-name": "CountAvailable"
                                    },
                                    "countInEvent": {
                                        "description": "count of \"in-event\" users",
                                        "type": "integer",
                                        "format": "int64",
                                        "x-go-name": "CountInEvent"
                                    },
                                    "countNotAvailable": {
                                        "description": "count of not available users",
                                        "type": "integer",
                                        "format": "int64",
                                        "x-go-name": "CountNotAvailable"
                                    }
                                },
                                "x-go-package": "groupalarm.com/go/organization/api/services"
                            },
                            "description": {
                                "description": "user defined description",
                                "type": "string",
                                "x-go-name": "Description"
                            },
                            "hasChildren": {
                                "description": "defines if it's the parent of any other organization",
                                "type": "boolean",
                                "x-go-name": "HasChildren"
                            },
                            "id": {
                                "description": "ID of this organization",
                                "type": "integer",
                                "format": "int64",
                                "x-go-name": "ID"
                            },
                            "isDemo": {
                                "description": "is true, when there is no billing configuration for this organization",
                                "type": "boolean",
                                "x-go-name": "IsDemo"
                            },
                            "name": {
                                "description": "user defined name",
                                "type": "string",
                                "x-go-name": "Name"
                            },
                            "ownerIDs": {
                                "description": "user id of the organization owner/creator",
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int64"
                                },
                                "x-go-name": "OwnerIDs"
                            },
                            "parentID": {
                                "description": "optional: ID of the parent organization",
                                "type": "integer",
                                "format": "int64",
                                "x-go-name": "ParentID"
                            }
                        },
                        "x-go-package": "groupalarm.com/go/organization/api/services"
                    },
                    "users": {
                        "description": "array of user bulk elements",
                        "type": "array",
                        "items": {
                            "description": "BulkUserElement describes an user bulk element",
                            "type": "object",
                            "properties": {
                                "email": {
                                    "type": "string",
                                    "x-go-name": "Email"
                                },
                                "id": {
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "ID"
                                },
                                "labels": {
                                    "type": "array",
                                    "items": {
                                        "description": "Label describes a label payload",
                                        "type": "object",
                                        "required": [
                                            "organizationID",
                                            "name"
                                        ],
                                        "properties": {
                                            "assignees": {
                                                "description": "assigned user for this label",
                                                "type": "array",
                                                "items": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                },
                                                "x-go-name": "Assignees"
                                            },
                                            "color": {
                                                "description": "hex color code",
                                                "type": "string",
                                                "x-go-name": "Color"
                                            },
                                            "description": {
                                                "description": "description for this labels",
                                                "type": "string",
                                                "x-go-name": "Description"
                                            },
                                            "id": {
                                                "description": "id for this label",
                                                "type": "integer",
                                                "format": "int64",
                                                "x-go-name": "ID"
                                            },
                                            "name": {
                                                "description": "name of this label",
                                                "type": "string",
                                                "x-go-name": "Name"
                                            },
                                            "organizationID": {
                                                "description": "organization id for this label",
                                                "type": "integer",
                                                "format": "int64",
                                                "x-go-name": "OrganizationID"
                                            }
                                        },
                                        "x-go-package": "groupalarm.com/go/user/api/services"
                                    },
                                    "x-go-name": "Labels"
                                },
                                "rank": {
                                    "type": "string",
                                    "x-go-name": "Rank"
                                },
                                "roles": {
                                    "type": "array",
                                    "items": {
                                        "description": "This is used for role interaction",
                                        "type": "object",
                                        "title": "Definition of a role payload",
                                        "required": [
                                            "name",
                                            "organizationID"
                                        ],
                                        "properties": {
                                            "description": {
                                                "description": "Optional description for this role",
                                                "type": "string",
                                                "x-go-name": "Description"
                                            },
                                            "id": {
                                                "description": "ID for this role",
                                                "type": "integer",
                                                "format": "int64",
                                                "minimum": 1,
                                                "x-go-name": "ID"
                                            },
                                            "name": {
                                                "description": "Name for this role",
                                                "type": "string",
                                                "x-go-name": "Name"
                                            },
                                            "organizationID": {
                                                "description": "Connected organization ID",
                                                "type": "integer",
                                                "format": "int64",
                                                "minimum": 1,
                                                "x-go-name": "OrganizationID"
                                            },
                                            "type": {
                                                "description": "Definition of default organization roles",
                                                "type": "string",
                                                "x-go-name": "Type"
                                            }
                                        },
                                        "x-go-package": "groupalarm.com/go/rbac/api/services"
                                    },
                                    "x-go-name": "Roles"
                                }
                            },
                            "x-go-package": "groupalarm.com/go/user/api/services"
                        },
                        "x-go-name": "Users"
                    }
                },
                "x-go-package": "groupalarm.com/go/user/api/services"
            },
            "UserInviteResult": {
                "description": "UserInviteResult describes the import result payload",
                "type": "object",
                "properties": {
                    "importResult": {
                        "description": "ImportResult describes the result of an import",
                        "type": "string",
                        "x-go-package": "groupalarm.com/go/user/api/services"
                    },
                    "user": {
                        "description": "BulkUserElement describes an user bulk element",
                        "type": "object",
                        "properties": {
                            "email": {
                                "type": "string",
                                "x-go-name": "Email"
                            },
                            "id": {
                                "type": "integer",
                                "format": "int64",
                                "x-go-name": "ID"
                            },
                            "labels": {
                                "type": "array",
                                "items": {
                                    "description": "Label describes a label payload",
                                    "type": "object",
                                    "required": [
                                        "organizationID",
                                        "name"
                                    ],
                                    "properties": {
                                        "assignees": {
                                            "description": "assigned user for this label",
                                            "type": "array",
                                            "items": {
                                                "type": "integer",
                                                "format": "int64"
                                            },
                                            "x-go-name": "Assignees"
                                        },
                                        "color": {
                                            "description": "hex color code",
                                            "type": "string",
                                            "x-go-name": "Color"
                                        },
                                        "description": {
                                            "description": "description for this labels",
                                            "type": "string",
                                            "x-go-name": "Description"
                                        },
                                        "id": {
                                            "description": "id for this label",
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "ID"
                                        },
                                        "name": {
                                            "description": "name of this label",
                                            "type": "string",
                                            "x-go-name": "Name"
                                        },
                                        "organizationID": {
                                            "description": "organization id for this label",
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "OrganizationID"
                                        }
                                    },
                                    "x-go-package": "groupalarm.com/go/user/api/services"
                                },
                                "x-go-name": "Labels"
                            },
                            "rank": {
                                "type": "string",
                                "x-go-name": "Rank"
                            },
                            "roles": {
                                "type": "array",
                                "items": {
                                    "description": "This is used for role interaction",
                                    "type": "object",
                                    "title": "Definition of a role payload",
                                    "required": [
                                        "name",
                                        "organizationID"
                                    ],
                                    "properties": {
                                        "description": {
                                            "description": "Optional description for this role",
                                            "type": "string",
                                            "x-go-name": "Description"
                                        },
                                        "id": {
                                            "description": "ID for this role",
                                            "type": "integer",
                                            "format": "int64",
                                            "minimum": 1,
                                            "x-go-name": "ID"
                                        },
                                        "name": {
                                            "description": "Name for this role",
                                            "type": "string",
                                            "x-go-name": "Name"
                                        },
                                        "organizationID": {
                                            "description": "Connected organization ID",
                                            "type": "integer",
                                            "format": "int64",
                                            "minimum": 1,
                                            "x-go-name": "OrganizationID"
                                        },
                                        "type": {
                                            "description": "Definition of default organization roles",
                                            "type": "string",
                                            "x-go-name": "Type"
                                        }
                                    },
                                    "x-go-package": "groupalarm.com/go/rbac/api/services"
                                },
                                "x-go-name": "Roles"
                            }
                        },
                        "x-go-package": "groupalarm.com/go/user/api/services"
                    }
                },
                "x-go-package": "groupalarm.com/go/user/api/services"
            },
            "UserList": {
                "description": "UserList describes a list of users for pagination",
                "type": "object",
                "properties": {
                    "totalUsers": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "TotalUsers"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "description": "User is a basic copy of user-service's PublicUser",
                            "type": "object",
                            "properties": {
                                "email": {
                                    "description": "users email address",
                                    "type": "string",
                                    "x-go-name": "EMail"
                                },
                                "id": {
                                    "description": "ID for this user",
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "ID"
                                },
                                "name": {
                                    "description": "name of the user",
                                    "type": "string",
                                    "x-go-name": "Name"
                                },
                                "surname": {
                                    "description": "surname of the user",
                                    "type": "string",
                                    "x-go-name": "Surname"
                                }
                            },
                            "x-go-package": "groupalarm.com/go/audit/api/services"
                        },
                        "x-go-name": "Users"
                    }
                },
                "x-go-package": "groupalarm.com/go/user/api/services"
            },
            "UserRole": {
                "description": "This is used for user to role assignment",
                "type": "object",
                "title": "Definition of a user-role payload",
                "required": [
                    "userID",
                    "roleID"
                ],
                "properties": {
                    "roleID": {
                        "description": "ID of the role",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "x-go-name": "RoleID"
                    },
                    "userID": {
                        "description": "ID of the user",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "x-go-name": "UserID"
                    }
                },
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "UserRolesService": {
                "type": "object",
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "UserService": {
                "description": "UserService defines all required methods for the user-logic",
                "type": "object",
                "x-go-package": "groupalarm.com/go/user/api/services"
            },
            "UserSettings": {
                "description": "UserSettings contains all user-defined settings",
                "type": "object",
                "properties": {
                    "checks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "x-go-name": "Checks"
                    },
                    "defaultOrganizationId": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "DefaultOrganizationID"
                    },
                    "helpTexts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "x-go-name": "HelpTexts"
                    },
                    "showFeedbackButton": {
                        "type": "boolean",
                        "x-go-name": "ShowFeedbackButton"
                    },
                    "theme": {
                        "type": "string",
                        "x-go-name": "Theme"
                    },
                    "tracking": {
                        "type": "boolean",
                        "x-go-name": "Tracking"
                    }
                },
                "x-go-package": "groupalarm.com/go/user/api/services"
            },
            "UserSettingsService": {
                "description": "UserSettingsService defines all methods needed to implement a user-settings service",
                "type": "object",
                "x-go-package": "groupalarm.com/go/user/api/services"
            },
            "UserUpdate": {
                "description": "UserUpdate describes an user update payload",
                "type": "object",
                "required": [
                    "user"
                ],
                "properties": {
                    "organizationId": {
                        "description": "id of the editing organization\nnot needed if user is editing himself",
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "OrganizationID"
                    },
                    "user": {
                        "description": "User is a basic copy of user-service's PublicUser",
                        "type": "object",
                        "properties": {
                            "email": {
                                "description": "users email address",
                                "type": "string",
                                "x-go-name": "EMail"
                            },
                            "id": {
                                "description": "ID for this user",
                                "type": "integer",
                                "format": "int64",
                                "x-go-name": "ID"
                            },
                            "name": {
                                "description": "name of the user",
                                "type": "string",
                                "x-go-name": "Name"
                            },
                            "surname": {
                                "description": "surname of the user",
                                "type": "string",
                                "x-go-name": "Surname"
                            }
                        },
                        "x-go-package": "groupalarm.com/go/audit/api/services"
                    }
                },
                "x-go-package": "groupalarm.com/go/user/api/services"
            }
        }
    },
    "security": [
        {
            "API_Token": []
        },
        {
            "Personal-Access-Token": []
        }
    ]
}